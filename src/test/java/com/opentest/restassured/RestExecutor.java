

package com.opentest.restassured;

import static io.restassured.RestAssured.given;

import java.util.ArrayList;

import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class RestExecutor {

	public Response apiGetRequest(RequestSpecification requestSpecification, ArrayList<String> pathParams) {
		String inputParam = null;
		if(pathParams.size() > 1) {
			StringBuilder stringBuilder = new StringBuilder();
			stringBuilder.append(pathParams.get(0));
			for(int i=1; i<pathParams.size(); i++)
				stringBuilder.append("/"+pathParams.get(i));
			inputParam = stringBuilder.toString();
		}else
			inputParam = pathParams.get(0);
		return given().spec(requestSpecification).get(inputParam);
	}

	public Response apiGetRequest(RequestSpecification requestSpecification, String pathParam) {
		return given().spec(requestSpecification).get(pathParam);
	}
	
	public Response apiGetRequest(String url) {
		Response response= given()
				.contentType(ContentType.JSON)
				.when()
				.get(url);
		return response;
	}

	public Response apiPostRequest(RequestSpecification requestSpecification, String payloadString, String pathParam) {
		requestSpecification.body(payloadString);
		Response response= given().spec(requestSpecification).contentType(ContentType.JSON).post(pathParam);
//				.contentType(ContentType.JSON)
//				.body(payloadString)
//				.when()
//				.post(url);
		return response;
	}
	
	public Response apiPostRequest(String url, String payloadString) {
		Response response= given()
				.contentType(ContentType.JSON)
				.body(payloadString)
				.when()
				.post(url);
		return response;
	}

	public Response apiDeleteRequest(String url) {
		Response response= given()
				.contentType(ContentType.URLENC)
				.when()
				.delete(url);
		return response;
	}
}
