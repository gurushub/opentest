/**
 * 
 */
package com.open.base;


import java.util.Map;

import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;

import com.opentest.restassured.RestExecutor;
import com.opentest.service.OpenTestApplication;

import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.LogDetail;


/**
 * @author mm955y
 *
 */

@RunWith(SpringRunner.class)
@SpringBootTest(classes = OpenTestApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)

public class BaseTest extends AbstractTestNGSpringContextTests
{
	public String testEnvironment;
	public RequestSpecBuilder requestSpecBuilder;
	public RestExecutor restExecutor;
	public Map<String, String> testData;
		
	@LocalServerPort
	private int port = 8082;
	    
	@Value("${service.base.url}")
	protected String baseUrl;
	
	protected String rootUrl;
    
    @BeforeSuite
	public void beforeSuite() {
		System.out.println("@BeforeSuite");


	}
    
    @BeforeMethod
	public void beforeMethod() {
		rootUrl = baseUrl+":" + port;
		System.out.println("@BeforeMethod");
		System.out.println("rootUrl "+rootUrl);
		requestSpecBuilder =  new RequestSpecBuilder()
				.setBaseUri(rootUrl)
				.setBasePath("restapi")
				.log(LogDetail.ALL);
		restExecutor = new RestExecutor();
		

	} 
}