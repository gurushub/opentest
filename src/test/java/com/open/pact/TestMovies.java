package com.open.pact;



import static junit.framework.TestCase.assertEquals;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.junit.Rule;
import org.junit.Test;

import au.com.dius.pact.consumer.Pact;
import au.com.dius.pact.consumer.PactProviderRuleMk2;
import au.com.dius.pact.consumer.PactVerification;
import au.com.dius.pact.consumer.dsl.PactDslWithProvider;
import au.com.dius.pact.model.RequestResponsePact;

public class TestMovies {

	@Rule
	public PactProviderRuleMk2 mockProvider = new PactProviderRuleMk2("Foo_Provider", "localhost", 8092, this);
	@Pact(provider="Foo_Provider", consumer="Foo_Consumer")
	public RequestResponsePact createFragment(PactDslWithProvider builder) {

		Map<String, String> headers = new HashMap<>();
		headers.put("Content-Type", "application/json;charset=UTF-8");

		return builder.uponReceiving("a request for Foos")
				.path("/restapi/movies/")
				.method("GET")

				.willRespondWith()
				.headers(headers)
				.status(200).toPact();	
				
	}

	@Test
	@PactVerification("Foo_Provider")
	public void runTest() throws IOException {
		System.out.println("myUrl "+mockProvider.getConfig().url());
		DummyConsumerOpenTest restClient = new DummyConsumerOpenTest(mockProvider.getConfig().url());
		assertEquals(200, restClient.getMovies());
	}

}
