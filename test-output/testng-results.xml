<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-06-21T10:24:37Z" name="Default suite" finished-at="2019-06-21T10:24:56Z" duration-ms="19180">
    <groups>
    </groups>
    <test started-at="2019-06-21T10:24:37Z" name="Default test" finished-at="2019-06-21T10:24:56Z" duration-ms="19180">
      <class name="com.open.functional.MoviesTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:37Z" name="beforeSuite" finished-at="2019-06-21T15:54:37Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:37Z" name="springTestContextBeforeTestClass" finished-at="2019-06-21T15:54:37Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:37Z" name="springTestContextPrepareTestInstance" finished-at="2019-06-21T15:54:53Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="15582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:53Z" name="springTestContextBeforeTestMethod" finished-at="2019-06-21T15:54:53Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testEndPoint() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:53Z" name="beforeMethod" finished-at="2019-06-21T15:54:53Z" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testEndPoint()[pri:1, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:53Z" name="testEndPoint" finished-at="2019-06-21T15:54:54Z" duration-ms="1406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEndPoint -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:54Z" name="springTestContextAfterTestMethod" finished-at="2019-06-21T15:54:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testEndPoint() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:54Z" name="springTestContextBeforeTestMethod" finished-at="2019-06-21T15:54:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testAddMovies() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:54Z" name="beforeMethod" finished-at="2019-06-21T15:54:54Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddMovies()[pri:2, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:54Z" name="testAddMovies" finished-at="2019-06-21T15:54:56Z" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMovies -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextAfterTestMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testAddMovies() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextBeforeTestMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testGetMovies() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="beforeMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetMovies()[pri:3, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="testGetMovies" finished-at="2019-06-21T15:54:56Z" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovies -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextBeforeTestMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testMoviesById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextAfterTestMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testGetMovies() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="beforeMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMoviesById()[pri:4, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="testMoviesById" finished-at="2019-06-21T15:54:56Z" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoviesById -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextAfterTestClass" finished-at="2019-06-21T15:54:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.open.functional.MoviesTest@7cf6a5f9]" started-at="2019-06-21T15:54:56Z" name="springTestContextAfterTestMethod" finished-at="2019-06-21T15:54:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.open.functional.MoviesTest.testMoviesById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.open.functional.MoviesTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
